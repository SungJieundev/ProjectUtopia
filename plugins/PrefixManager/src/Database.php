<?php

/*
 * Auto-generated by libasynql-fx
 * Created from sqlite.sql
 */

declare(strict_types=1);

namespace alvin0319\PrefixManager;

use Generator;
use poggit\libasynql\DataConnector;
use SOFe\AwaitGenerator\Await;

final class Database{
	public function __construct(private DataConnector $conn){ }

	/**
	 * <h4>Declared in:</h4>
	 * - resources/sqlite.sql:12
	 *
	 * @return Generator 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function create(string $name, string $nickname, int $selectedPrefix, string $prefixes, int $syncBlocked) : Generator{
		$this->conn->executeInsert("prefixmanager.create", ["name" => $name, "nickname" => $nickname, "selectedPrefix" => $selectedPrefix, "prefixes" => $prefixes, "syncBlocked" => $syncBlocked,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/sqlite.sql:23
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function get(string $name) : Generator{
		$this->conn->executeSelect("prefixmanager.get", ["name" => $name,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/sqlite.sql:5
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function init() : Generator{
		$this->conn->executeChange("prefixmanager.init", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/sqlite.sql:19
	 *
	 * @return Generator 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function update(string $name, string $nickname, int $selectedPrefix, string $prefixes, int $syncBlocked) : Generator{
		$this->conn->executeChange("prefixmanager.update", ["name" => $name, "nickname" => $nickname, "selectedPrefix" => $selectedPrefix, "prefixes" => $prefixes, "syncBlocked" => $syncBlocked,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/sqlite.sql:28
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function updateState(string $name, int $syncBlocked) : Generator{
		$this->conn->executeChange("prefixmanager.update_state", ["name" => $name, "syncBlocked" => $syncBlocked,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}
}
