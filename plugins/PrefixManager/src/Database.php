<?php

/*
 * Auto-generated by libasynql-fx
 * Created from mysql.sql
 */

declare(strict_types=1);

namespace alvin0319\PrefixManager;

use Generator;
use poggit\libasynql\DataConnector;
use SOFe\AwaitGenerator\Await;

final readonly class Database{
	public function __construct(private DataConnector $conn){ }

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:20
	 *
	 * @param string $prefix
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function createPrefix(string $prefix,) : Generator{
		$this->conn->executeInsert("create_prefix", ["prefix" => $prefix,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:42
	 *
	 * @param string $name
	 * @param string $customName
	 * @param string $prefixes
	 * @param int    $syncBlocked
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function createSession(string $name, string $customName, string $prefixes, int $syncBlocked,) : Generator{
		$this->conn->executeInsert("create_session", ["name" => $name, "customName" => $customName, "prefixes" => $prefixes, "syncBlocked" => $syncBlocked,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:24
	 *
	 * @param string $prefix
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function deletePrefix(string $prefix,) : Generator{
		$this->conn->executeChange("delete_prefix", ["prefix" => $prefix,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:57
	 *
	 * @param string $name
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function deleteSession(string $name,) : Generator{
		$this->conn->executeChange("delete_session", ["name" => $name,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:28
	 *
	 * @param string $prefix
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getPrefix(string $prefix,) : Generator{
		$this->conn->executeSelect("get_prefix", ["prefix" => $prefix,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:32
	 *
	 * @param int $id
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getPrefixById(int $id,) : Generator{
		$this->conn->executeSelect("get_prefix_by_id", ["id" => $id,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:35
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getPrefixes() : Generator{
		$this->conn->executeSelect("get_prefixes", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:46
	 *
	 * @param string $name
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getSession(string $name,) : Generator{
		$this->conn->executeSelect("get_session", ["name" => $name,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:60
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getSessions() : Generator{
		$this->conn->executeSelect("get_sessions", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:8
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function init() : Generator{
		$this->conn->executeChange("init", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:16
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function initSession() : Generator{
		$this->conn->executeChange("init_session", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql.sql:53
	 *
	 * @param string $name
	 * @param string $customName
	 * @param string $prefixes
	 * @param int    $syncBlocked
	 *
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function updateSession(string $name, string $customName, string $prefixes, int $syncBlocked,) : Generator{
		$this->conn->executeChange("update_session", ["name" => $name, "customName" => $customName, "prefixes" => $prefixes, "syncBlocked" => $syncBlocked,], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}
}
